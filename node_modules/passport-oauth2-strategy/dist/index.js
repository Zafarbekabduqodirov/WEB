"use strict";
const passport = require('passport-strategy');
class Strategy extends passport.Strategy {
    constructor(options, verify) {
        super();
        if (typeof options === 'function') {
            verify = options;
            options = {};
        }
        if (!verify)
            throw new Error('Passport-oauth2-strategy requires a verify function');
        this.name = 'passport-oauth2-strategy';
        this._verify = verify;
        this._passReqToCallBack = options.passReqToCallBack;
    }
    authenticate(req) {
        if (!req.body) {
            return this.fail(0);
        }
        const grant = req.body['grant_type'];
        const clientId = req.body['client_id'];
        const clientSecret = req.body['client_secret'];
        if (!clientId || (grant === 'authorization_code' && !clientSecret)) {
            return this.fail(0);
        }
        const self = this;
        function verified(err, client, info) {
            if (err) {
                return self.error(err);
            }
            if (!client) {
                return self.fail(0);
            }
            self.success(client, info);
        }
        if (this._passReqToCallBack) {
            this._verify(req, clientId, clientSecret, verified);
        }
        else {
            this._verify(clientId, clientSecret, verified);
        }
    }
}
exports.Strategy = Strategy;
//# sourceMappingURL=index.js.map